//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0-b170531.0717 
//         See <a href="https://jaxb.java.net/">https://jaxb.java.net/</a> 
//         Any modifications to this file will be lost upon recompilation of the source schema. 
//         Generated on: 2018.02.10 at 05:14:53 PM CET 
//


package org.fpml.fpml_5.master;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LoadTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected         content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LoadTypeEnum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="Base"/&gt;
 *     &lt;enumeration value="Peak"/&gt;
 *     &lt;enumeration value="OffPeak"/&gt;
 *     &lt;enumeration value="BlockHours"/&gt;
 *     &lt;enumeration value="Custom"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "LoadTypeEnum")
@XmlEnum
public enum LoadTypeEnum {


    /**
     * Base
     * 
     */
    @XmlEnumValue("Base")
    BASE("Base"),

    /**
     * Peak
     * 
     */
    @XmlEnumValue("Peak")
    PEAK("Peak"),

    /**
     * Off-Peak
     * 
     */
    @XmlEnumValue("OffPeak")
    OFF_PEAK("OffPeak"),

    /**
     * Block Hours
     * 
     */
    @XmlEnumValue("BlockHours")
    BLOCK_HOURS("BlockHours"),

    /**
     * Anything that does not fall under the predefined standard categories
     * 
     */
    @XmlEnumValue("Custom")
    CUSTOM("Custom");
    private final String value;

    LoadTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LoadTypeEnum fromValue(String v) {
        for (LoadTypeEnum c: LoadTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
